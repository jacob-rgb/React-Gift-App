{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGriditem.js","components/GiffGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","categoria","a","url","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","console","log","className","src","alt","GiffGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","cat","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACCO,KAAK,OACLC,MAAOT,EACPU,SApBiB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,aA0BhCZ,EAAae,UAAY,CACrBd,cAAee,IAAUC,KAAKC,Y,mCCjCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCF,EADnC,+DAEKG,MAAMD,GAFX,cAEbE,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QATvB,kBAaZK,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAIrC,OAFAa,QAAQC,IAAIN,EAAIC,EAAOT,GAGnB,sBAAKe,UAAU,yCAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKR,IACpB,4BAAIA,QCJHS,EAAW,SAAC,GAAoB,IAAjBpB,EAAgB,EAAhBA,UAGxB,ECJwB,SAAEA,GAE1B,MAA0BlB,mBAAS,CAC/BwB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACNzB,EAAQC,GAAWyB,MAAM,SAAAC,GAASH,EAAS,CACvCjB,KAAMoB,EACNL,SAAS,SAEd,CAACrB,IAGGsB,EDXiBK,CAAc3B,GAA/BM,EAAP,EAAOA,KAAMe,EAAb,EAAaA,QAEb,OACI,qCACI,mCAAOrB,EAAP,OAEEqB,GAAW,wCAEb,qBAAMJ,UAAU,YAAhB,SACMX,EAAKE,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAEUA,GADAA,EAAIC,aEf5BkB,EAAe,WAGpB,MAAoC9C,mBAAS,CAAC,cAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAOJ,OACI,gCACI,+CACA,cAAE,EAAF,CAAeA,cAAgBA,IAC/B,uBAEA,6BAEQgD,EAAWrB,KAAK,SAAAsB,GAAG,OAAI,cAAC,EAAD,CAAqB9B,UAAa8B,GAAlBA,Y,MCf3DC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f923e5de.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategoria = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2) {\r\n            setCategorias(cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit= {handleSubmit}>\r\n            <input\r\n             type=\"text\"\r\n             value={inputValue}\r\n             onChange= { handleInputChange }\r\n             />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategoria.prototype = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${categoria}&limit=10&api_key=lWIP0RG0enhVVlBHezUX0SYDAVRYekVE`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGriditem = ( {id, title, url} ) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\nexport const GiffGrid = ( { categoria }) => {\r\n\r\n\r\n    const {data, loading} = useFetchGifs( categoria );\r\n\r\n    return (\r\n        <>\r\n            <h3> { categoria } </h3>\r\n\r\n            { loading && <p>Loading</p>}\r\n\r\n            <div  className=\"card-grid\">\r\n                { data.map( img => {\r\n                    return <GifGriditem\r\n                                key={img.id}\r\n                                 {...img}\r\n                                 />\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria).then( imgs => {setstate({\r\n            data: imgs,\r\n            loading: false\r\n        })} );\r\n    }, [categoria]);\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategoria } from './components/AddCategoria';\r\nimport { GiffGrid } from './components/GiffGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n        // const categorias = ['one punch', 'dragon ball', 'one piece']\r\n        const [categorias, setCategorias] = useState(['one punch']);\r\n\r\n        // const handleAdd = () => {\r\n        //     setCategorias( ['Naruto', ...categorias] );\r\n            \r\n        // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GiffExpertApp</h2>\r\n            < AddCategoria setCategorias={ setCategorias }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( cat => <GiffGrid key= {cat} categoria = {cat}/>)\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n// GifExpertApp\n// h2 and hr\n"],"sourceRoot":""}